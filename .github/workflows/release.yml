name: Create Release Tag
on:
  push:
    tags:
      - 'v*' # 推送标签，比如 v1.0, v20.15.10
jobs:
  build:
    name: 创建发布
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v4

      - name: 提取信息
        id: extractInfo
        run: |
          #获取当前和上一个标签
          git fetch --prune --unshallow
          tags=($(git tag -l --sort=-version:refname))
          currentTag=${tags[0]}
          previousTag=${tags[1]}
          #提取并分类提交消息
          commitMessages=$(git log --pretty=format:"- %s %h" "$previousTag".."$currentTag" | grep -E 'feat|fix|docs|perf')
          featMessages=$(echo "$commitMessages" | grep 'feat' || true)
          fixMessages=$(echo "$commitMessages" | grep 'fix' || true)
          docsMessages=$(echo "$commitMessages" | grep 'docs' || true)
          perfMessages=$(echo "$commitMessages" | grep 'perf' || true)
          #获取当前分支名
          branchName=$(git rev-parse --abbrev-ref HEAD)
          # 生成发布说明的Markdown字符串
          releaseNotes="## 更新内容：  \n"
          if [[ -n "$featMessages" ]]; then
            releaseNotes="$releaseNotes\n### ✨ Features | 新功能:  \n"
            for message in "${featMessages[@]}"; do
              releaseNotes="$releaseNotes\n$message"
            done
          fi
          if [[ -n "$fixMessages" ]]; then
            releaseNotes="$releaseNotes\n### 🐛 Bug Fixes | Bug 修复:  \n"
            for message in "${fixMessages[@]}"; do
              releaseNotes="$releaseNotes\n$message"
            done
          fi
          if [[ -n "$docsMessages" ]]; then
            releaseNotes="$releaseNotes\n### ✏️ Documentation | 文档:  \n"
            for message in "${docsMessages[@]}"; do
              releaseNotes="$releaseNotes\n$message"
            done
          fi
          if [[ -n "$perfMessages" ]]; then
            releaseNotes="$releaseNotes\n### ⚡ Performance Improvements | 性能优化:  \n"
            for message in "${perfMessages[@]}"; do
              releaseNotes="$releaseNotes\n$message"
            done
          fi
          echo -e "$releaseNotes" > changelog.md
          cat changelog.md

      - name: 创建标签的发布
        id: releaseTag
        uses: ncipollo/release-action@v1
        with:
          generateReleaseNotes: "false"  # 禁用自动生成发布说明
          bodyfile: changelog.md